{"version":3,"sources":["components/Blog.js","components/Togglable.js","components/BlogForm.js","services/blogs.js","reducers/notificationReducer.js","reducers/blogReducer.js","components/BlogList.js","components/Notification.js","components/Users.js","services/login.js","reducers/userReducer.js","components/Login.js","components/User.js","components/Navigation.js","components/BlogCard.js","components/BlogInfo.js","App.js","store.js","index.js"],"names":["Blog","_ref","blog","React","createElement","Link","to","concat","id","title","author","Togglable","forwardRef","props","ref","visible","setVisible","useState","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","Button","variant","onClick","buttonLabel","children","displayName","BlogForm","createBlog","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","Form","onSubmit","event","preventDefault","url","FormGroup","Label","Control","type","value","onChange","_ref2","target","_ref3","_ref4","baseUrl","token","getAll","axios","get","then","response","data","newToken","async","config","headers","Authorization","post","newBlog","update","newObject","put","comment","timeoutID","setNotification","text","cName","clearTimeout","dispatch","setTimeout","notificationReducer","state","arguments","length","undefined","action","blogReducer","changedBlog","map","filter","b","Blogs","blogs","useDispatch","addBlog","content","blogFormRef","current","blogService","error","createRef","Table","striped","hover","sort","likes","previousLikes","currentLikes","key","Notification","notification","useSelector","Alert","Users","uniqueUsers","user","blogsByUser","console","log","name","credentials","loggedUserJSON","window","localStorage","getItem","JSON","parse","userReducer","Login","username","setUsername","password","setPassword","login","loginService","setItem","stringify","exception","history","push","as","Row","column","sm","Col","User","userMatch","users","find","u","params","ListGroup","ListGroupItem","href","Navigation","Navbar","bg","Nav","Item","Collapse","className","Text","size","handleLogout","clear","Comment","Fragment","BlogCard","like","addComment","newComment","setNewComment","Card","Body","Title","Subtitle","comments","BlogInfo","blogMatch","likedBlog","updateBlog","addNewComment","App","useEffect","uniqBy","useHistory","useRouteMatch","Container","Switch","Route","path","Redirect","BlogList","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","Provider","Router","document","getElementById"],"mappings":"iPAgBeA,MAbFC,IAAe,IAAd,KAAEC,GAAMD,EAEpB,OACEE,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UACED,IAAAC,cAACC,IAAI,CAACC,GAAE,UAAAC,OAAYL,EAAKM,KAAON,EAAKO,MAAM,OAAKP,EAAKQ,Y,QCL/D,MAAMC,EAAYR,IAAMS,WAAW,CAACC,EAAOC,KACzC,MAAOC,EAASC,GAAcC,oBAAS,GAEjCC,EAAkB,CAAEC,QAASJ,EAAU,OAAS,IAChDK,EAAkB,CAAED,QAASJ,EAAU,GAAK,QAE5CM,EAAmBA,KACvBL,GAAYD,IAYd,OAVAO,8BAAoBR,EAAK,KAChB,CACLO,sBASFlB,IAAAC,cAAA,WACED,IAAAC,cAAA,KAAGmB,MAAOL,GACRf,IAAAC,cAACoB,IAAM,CAACC,QAAQ,UAAUC,QAASL,GAAmBR,EAAMc,cAE9DxB,IAAAC,cAAA,OAAKmB,MAAOH,GACTP,EAAMe,SACPzB,IAAAC,cAACoB,IAAM,CAACC,QAAQ,SAASC,QAASL,GAAkB,cAM5DV,EAAUkB,YAAc,YAETlB,Q,gBCiBAmB,MApDE7B,IAAqB,IAApB,WAAE8B,GAAY9B,EAC9B,MAAO+B,EAAUC,GAAehB,mBAAS,KAClCiB,EAAWC,GAAgBlB,mBAAS,KACpCmB,EAAQC,GAAapB,mBAAS,IAcrC,OACEd,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,kBACJD,IAAAC,cAACkC,IAAI,CAACC,SAfOC,IACfA,EAAMC,iBACNV,EAAW,CACTtB,MAAOuB,EACPtB,OAAQwB,EACRQ,IAAKN,IAEPH,EAAY,IACZE,EAAa,IACbE,EAAU,MAONlC,IAAAC,cAACuC,IAAS,KACRxC,IAAAC,cAACkC,IAAKM,MAAK,KAAC,SACZzC,IAAAC,cAACkC,IAAKO,QAAO,CACXrC,GAAG,QACHsC,KAAK,OACLC,MAAOf,EACPgB,SAAUC,IAAA,IAAC,OAAEC,GAAQD,EAAA,OAAKhB,EAAYiB,EAAOH,WAEjD5C,IAAAC,cAACuC,IAAS,KACRxC,IAAAC,cAACkC,IAAKM,MAAK,KAAC,UACZzC,IAAAC,cAACkC,IAAKO,QAAO,CACXrC,GAAG,SACHsC,KAAK,OACLC,MAAOb,EACPc,SAAUG,IAAA,IAAC,OAAED,GAAQC,EAAA,OAAKhB,EAAae,EAAOH,WAElD5C,IAAAC,cAACuC,IAAS,KACRxC,IAAAC,cAACkC,IAAKM,MAAK,KAAC,OACZzC,IAAAC,cAACkC,IAAKO,QAAO,CACXrC,GAAG,MACHsC,KAAK,OACLC,MAAOX,EACPY,SAAUI,IAAA,IAAC,OAAEF,GAAQE,EAAA,OAAKf,EAAUa,EAAOH,WAE/C5C,IAAAC,cAACoB,IAAM,CAACC,QAAQ,UAAUqB,KAAK,SAAStC,GAAG,gBAAe,YAC1DL,IAAAC,cAAA,a,iBChDR,MAAMiD,EAAU,aAEhB,IAAIC,EAAQ,KAoCG,MA9BAC,IACGC,IAAMC,IAAIJ,GACXK,KAAKC,GAAYA,EAASC,MA4B5B,EAlCEC,IACfP,EAAK,UAAA/C,OAAasD,IAiCL,EAzBAC,UACb,MAAMC,EAAS,CACbC,QAAS,CAAEC,cAAeX,IAG5B,aADuBE,IAAMU,KAAKb,EAASc,EAASJ,IACpCH,MAoBH,EAjBAQ,CAAC5D,EAAI6D,IACFb,IAAMc,IAAI,GAAD/D,OAAI8C,EAAO,KAAA9C,OAAIC,GAAM6D,GAC/BX,KAAKC,GAAYA,EAASC,MAe5B,EAZCW,CAAC/D,EAAI+D,IACHf,IAAMU,KAAK,GAAD3D,OAAI8C,EAAO,KAAA9C,OAAIC,EAAE,aAAa+D,GACzCb,KAAKC,GAAYA,EAASC,MC7B3C,IAAIY,EAEJ,MAgBaC,EAAkBA,CAACC,EAAMC,KACpCC,aAAaJ,GACNV,UACLe,EAAS,CACP/B,KAAM,mBACNc,KAAM,CAAEc,OAAMC,WAEhBH,EAAYM,WAAW,KACrBD,EAAS,CACP/B,KAAM,wBAEP,OAKQiC,MAhCa,WAAyB,IAAxBC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAQC,EAAOtC,MACf,IAAK,mBAGH,MAAO,CAAE4B,KAFIU,EAAOxB,KAAKc,KAEVC,MADDS,EAAOxB,KAAKe,OAG5B,IAAK,qBACH,MAAO,GAET,QACE,OAAOK,ICsFIK,MAhGK,WAAyB,IAAxBL,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrC,OAAQC,EAAOtC,MACf,IAAK,aACH,OAAOsC,EAAOxB,KAChB,IAAK,aACH,MAAO,IAAIoB,EAAOI,EAAOxB,MAC3B,IAAK,cAAe,CAClB,MAAM0B,EAAcF,EAAOxB,KAC3B,OAAOoB,EAAMO,IAAIrF,GACfA,EAAKM,KAAO8E,EAAY9E,GAAKN,EAAOoF,GAExC,IAAK,cAAe,CAClB,MAAM9E,EAAK4E,EAAOxB,KAClB,OAAOoB,EAAMQ,OAAOC,GAAKA,EAAEjF,KAAOA,GAEpC,QACE,OAAOwE,I,QCoBIU,MA/BDzF,IAAgB,IAAf,MAAE0F,GAAO1F,EACtB,MAAM4E,EAAWe,cAEXC,EAAU/B,UDYSgC,MCXvBC,EAAYC,QAAQ3E,mBACpBwD,GDUuBiB,ECVH3B,EDWfL,UACL,IACE,MAAMK,QAAgB8B,EAAmBH,GACzCjB,EAAS,CACP/B,KAAM,aACNc,KAAMO,IAERU,EAASJ,EAAgB,cAADlE,OAAe4D,EAAQ1D,MAAK,QAAAF,OAAO4D,EAAQzD,OAAM,UAAU,YACnF,MAAOwF,GACPrB,EAASJ,EAAgB,4DAA6D,gBCjBpFsB,EAAc5F,IAAMgG,YAQ1B,OACEhG,IAAAC,cAAA,WANAD,IAAAC,cAACO,EAAS,CAACgB,YAAY,eAAeb,IAAKiF,GACzC5F,IAAAC,cAAC0B,EAAQ,CAACC,WAAY8D,KAOtB1F,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAACgG,IAAK,CAACC,SAAO,EAACC,OAAK,GACjBX,EACEY,KAAK,CAAAtD,EAAAE,KAAA,IAAGqD,MAAOC,GAAexD,GAAIuD,MAAOE,GAAcvD,EAAA,OAAKuD,EAAeD,IAC3ElB,IAAIrF,GACHC,IAAAC,cAACJ,EAAI,CAAC2G,IAAKzG,EAAKM,GAAIN,KAAMA,Q,QCfvB0G,MAbMA,KACnB,MAAMC,EAAeC,YAAY9B,GAASA,EAAM6B,cAEhD,OAAqB,OAAjBA,EACK,KAGL1G,IAAAC,cAAC2G,IAAK,CAACtF,QAASoF,EAAalC,OAC1BkC,EAAanC,O,OC0BPsC,MAlCD/G,IAA6B,IAA5B,MAAE0F,EAAK,YAAEsB,GAAahH,EAEnC,IAAK,IAAIiH,KAAQD,EAAa,CAC5B,MAAME,EAAcxB,EAAMH,OAAOtF,GAAQA,EAAKgH,KAAK1G,KAAO0G,EAAK1G,IAC/D0G,EAAKvB,MAAQwB,EAEf,OAAMxB,GAASsB,GAIfG,QAAQC,IAAIJ,GAGV9G,IAAAC,cAAA,WACED,IAAAC,cAACgG,IAAK,CAACC,SAAO,EAACC,OAAK,GAClBnG,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,UAAI,mBAGRD,IAAAC,cAAA,aACG6G,EACE1B,IAAI2B,GACH/G,IAAAC,cAAA,MAAIuG,IAAKO,EAAK1G,IACZL,IAAAC,cAAA,UAAID,IAAAC,cAACC,IAAI,CAACC,GAAE,UAAAC,OAAY2G,EAAK1G,KAAO0G,EAAKI,OACzCnH,IAAAC,cAAA,UAAK8G,EAAKvB,MAAMT,cAnBrB,MCHI,MALDpB,gBACWN,IAAMU,KAHf,aAG6BqD,IAC3B3D,KCDlB,MAAM4D,EAAiBC,OAAOC,aAAaC,QAAQ,qBACnD,IAAIT,EACAM,IACFN,EAAOU,KAAKC,MAAML,GAClBvB,EAAqBiB,EAAK5D,QAyCbwE,MAtCK,WAAmC,IAAlC9C,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGiC,GAAQ,KAAM9B,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOtC,MACf,IAAK,aACH,OAAOsC,EAAOxB,KAChB,IAAK,aACH,OAAO,KACT,QACE,OAAOoB,I,gBCkCI+C,MA/CAlH,IACb,MAAOmH,EAAUC,GAAehH,mBAAS,KAClCiH,EAAUC,GAAelH,mBAAS,IAEnC4D,EAAWe,cAUjB,OACEzF,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,4BACJD,IAAAC,cAAA,UACAD,IAAAC,cAACkC,IAAI,CAACC,SAZWC,IACnBA,EAAMC,iBACNwF,EAAY,IACZE,EAAY,IACZtD,EDOiBuD,EAACJ,EAAUE,IACvBpE,UACL,IACE,MAAMoD,QAAamB,EACjB,CACEL,WAAUE,aAEdT,OAAOC,aAAaY,QAAQ,oBAAqBV,KAAKW,UAAUrB,IAChEjB,EAAqBiB,EAAK5D,OAC1BuB,EAAS,CACP/B,KAAM,aACNc,KAAMsD,IAERrC,EAASJ,EAAgB,WAADlE,OAAY2G,EAAKI,MAAQ,YACjD,MAAOkB,GACP3D,EAASJ,EAAgB,6BAA8B,aCtBhD2D,CAAMJ,EAAUE,IACzBrH,EAAM4H,QAAQC,KAAK,YAQfvI,IAAAC,cAACuC,IAAS,CAACgG,GAAIC,KACbzI,IAAAC,cAACkC,IAAKM,MAAK,CAACiG,QAAM,EAACC,GAAI,GAAG,YAC1B3I,IAAAC,cAAC2I,IAAG,CAACD,GAAI,GACP3I,IAAAC,cAACkC,IAAKO,QAAO,CACXrC,GAAG,WACHsC,KAAK,OACLC,MAAOiF,EACPV,KAAK,WACLtE,SAAU/C,IAAA,IAAC,OAAEiD,GAAQjD,EAAA,OAAKgI,EAAY/E,EAAOH,YAGnD5C,IAAAC,cAACuC,IAAS,CAACgG,GAAIC,KACbzI,IAAAC,cAACkC,IAAKM,MAAK,CAACiG,QAAM,EAACC,GAAI,GAAG,YAC1B3I,IAAAC,cAAC2I,IAAG,CAACD,GAAI,GACP3I,IAAAC,cAACkC,IAAKO,QAAO,CACXrC,GAAG,WACHsC,KAAK,WACLC,MAAOmF,EACPZ,KAAK,WACLtE,SAAUC,IAAA,IAAC,OAAEC,GAAQD,EAAA,OAAKkF,EAAYjF,EAAOH,YAGnD5C,IAAAC,cAACoB,IAAM,CAACC,QAAQ,UAAUqB,KAAK,UAAS,Y,gBChBjCkG,MA3BF/I,IAA+C,IAA9C,UAAEgJ,EAAS,MAAEC,EAAK,YAAEjC,EAAW,MAAEtB,GAAO1F,EAEpD,IAAK,IAAIiH,KAAQD,EAAa,CAC5B,MAAME,EAAcxB,EAAMH,OAAOtF,GAAQA,EAAKgH,KAAK1G,KAAO0G,EAAK1G,IAC/D0G,EAAKvB,MAAQwB,EAEf,MAAMD,EAAO+B,EACTC,EAAMC,KAAKC,GAAKA,EAAE5I,KAAOyI,EAAUI,OAAO7I,IAC1C,KAEJ,OAAK0G,EAKH/G,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAK8G,EAAKI,MACVnH,IAAAC,cAACkJ,IAAS,KAAC,cACRpC,EAAKvB,MACHJ,IAAIrF,GACHC,IAAAC,cAACmJ,IAAa,CAAC5C,IAAKzG,EAAKM,GAAI4E,QAAM,EAACoE,KAAI,UAAAjJ,OAAYL,EAAKM,IAAMiB,QAAQ,WAAWvB,EAAKO,UATxF,M,iBCyBIgJ,MAhCIxJ,IAAwB,IAAvB,KAAEiH,EAAI,QAAEuB,GAASxI,EACnC,MAAM4E,EAAWe,cAQjB,OACEzF,IAAAC,cAAA,WACED,IAAAC,cAAA,WACED,IAAAC,cAACsJ,IAAM,CAACC,GAAG,QAAQlI,QAAQ,SACzBtB,IAAAC,cAACwJ,IAAIC,KAAI,KACP1J,IAAAC,cAACwJ,IAAIvJ,KAAI,KAACF,IAAAC,cAACC,IAAI,CAACC,GAAG,UAAS,WAE9BH,IAAAC,cAACwJ,IAAIC,KAAI,KACP1J,IAAAC,cAACwJ,IAAIvJ,KAAI,KAACF,IAAAC,cAACC,IAAI,CAACC,GAAG,UAAS,WAE9BH,IAAAC,cAACsJ,IAAOI,SAAQ,CAACC,UAAU,uBACzB5J,IAAAC,cAACsJ,IAAOM,KAAI,KACT9C,EAAKI,KAAK,kBACXnH,IAAAC,cAACoB,IAAM,CAACC,QAAQ,YAAYwI,KAAK,KAAKnH,KAAK,SAAStC,GAAG,eAAekB,QAnB7DwI,KACnBrF,GHgCF4C,OAAOC,aAAayC,QACZ,CACNrH,KAAM,gBGjCN+B,EAASJ,EAAgB,GAADlE,OAAI2G,EAAKI,KAAI,0BAA0B,YAC/DmB,EAAQC,KAAK,OAgB0F,eAKrGvI,IAAAC,cAAA,UAAI,c,SC/BV,MAAMgK,EAAUnK,IAAkB,IAAjB,QAAE6F,GAAS7F,EAC1B,OACEE,IAAAC,cAAAD,IAAAkK,SAAA,KACElK,IAAAC,cAACmJ,IAAa,KAAEzD,KAiDPwE,MA5CErH,IAAiC,IAAhC,KAAE/C,EAAI,KAAEqK,EAAI,WAAEC,GAAYvH,EAC1C,MAAOwH,EAAYC,GAAiBzJ,mBAAS,IAQ7C,OACEd,IAAAC,cAAA,WACED,IAAAC,cAACuK,IAAI,CAACZ,UAAU,QACd5J,IAAAC,cAACuK,IAAKC,KAAI,KACRzK,IAAAC,cAACuK,IAAKE,MAAK,KAAE3K,EAAKO,OAClBN,IAAAC,cAACuK,IAAKX,KAAI,KAAC,WAAS9J,EAAKQ,QACzBP,IAAAC,cAACuK,IAAKG,SAAQ,KAAE5K,EAAKsG,MAAM,UAAOrG,IAAAC,cAACoB,IAAM,CAACC,QAAQ,UAAUqB,KAAK,SAASmH,KAAK,KAC7EvI,QAASA,IAAM6I,EAAKrK,IAAO,SAC7BC,IAAAC,cAACuK,IAAKtK,KAAI,CAACmJ,KAAMtJ,EAAKwC,KAAMxC,EAAKwC,KACjCvC,IAAAC,cAACuK,IAAKX,KAAI,KAAC,YAAU9J,EAAKgH,KAAKc,UAE/B7H,IAAAC,cAAA,cAAQ,aACRD,IAAAC,cAACkJ,IAAS,CAAC7H,QAAQ,SAChBvB,EAAK6K,SAASxF,IAAIhB,GACjBpE,IAAAC,cAACgK,EAAO,CAACzD,IAAKpC,EAAQ/D,GAAIsF,QAASvB,EAAQuB,cAMnD3F,IAAAC,cAACkC,IAAI,CAACC,SA1BaC,IACrBA,EAAMC,iBACN+H,EAAWC,GACXC,EAAc,MAwBVvK,IAAAC,cAACuC,IAAS,KACRxC,IAAAC,cAACkC,IAAKM,MAAK,KAAC,qBACZzC,IAAAC,cAACkC,IAAKO,QAAO,CACXrC,GAAG,UACHsC,KAAK,OACLC,MAAO0H,EACPzH,SAAUG,IAAA,IAAC,OAAED,GAAQC,EAAA,OAAKuH,EAAcxH,EAAOH,WAEnD5C,IAAAC,cAACoB,IAAM,CAACsB,KAAK,UAAS,mBClBfkI,MA1BE/K,IAAiC,IAAhC,MAAE0F,EAAK,UAAEsF,EAAS,KAAE/D,GAAMjH,EAC1C,MAAM4E,EAAWe,cAEX1F,EAAO+K,EACTtF,EAAMwD,KAAKjJ,GAAQA,EAAKM,KAAOyK,EAAU5B,OAAO7I,IAChD,KAYJ,OAAKN,EAKHC,IAAAC,cAACkK,EAAQ,CAACpK,KAAMA,EAAMqK,KAfVrK,IACZ2E,EV0CuB3E,IAClB4D,UACL,IACE,MAAMoH,EAAY,IAAKhL,EAAMsG,MAAQtG,EAAKsG,MAAQ,GAGlD3B,EAAS,CACP/B,KAAM,cACNc,WAJwBqC,EAAmB/F,EAAKM,GAAI0K,KAMtDrG,EAASJ,EAAgB,qBAAsB,YAC/C,MAAOyB,GACPrB,EAASJ,EAAgB,SAADlE,OAAUL,EAAKO,MAAK,yCAAyC,aUtD9E0K,CAAWjL,KAccsK,WAXhBjG,IAClBM,EVuByBuG,EAAC7G,EAASrE,IAC9B4D,UACL,IAEEe,EAAS,CACP/B,KAAM,cACNc,WAH0BqC,EAAoB/F,EAAKM,GAAI+D,KAKzDM,EAASJ,EAAgB,yBAA0B,YACnD,MAAOyB,GACPrB,EAASJ,EAAgB,wBAAyB,aUjC3C2G,CAAc,CACrBtF,QAASvB,GACRrE,KAQuDgH,KAAMA,IAJzD,M,sBCsCImE,OA9CHA,KACV,MAAMxG,EAAWe,cAEjB0F,oBAAU,KACRzG,EXuEKf,UAELe,EAAS,CACP/B,KAAM,aACNc,WAHkBqC,SWvEnB,CAACpB,IAEJ,MAAMqC,EAAOJ,YAAY9B,GAASA,EAAMkC,MAClCvB,EAAQmB,YAAY9B,GAASA,EAAMW,OACnCuD,EAAQvD,EAAMJ,IAAIrF,GAAQA,EAAKgH,MAC/BD,EAAcsE,iBAAOrC,EAAO,MAE5BT,EAAU+C,cAEVvC,EAAYwC,YAAc,cAC1BR,EAAYQ,YAAc,cAEhC,OACEtL,IAAAC,cAACsL,IAAS,CAAC3B,UAAU,uCACnB5J,IAAAC,cAACwG,EAAY,MACZM,EAAO/G,IAAAC,cAACqJ,EAAU,CAACvC,KAAMA,EAAMuB,QAASA,IAAc,KACvDtI,IAAAC,cAACuL,IAAM,KACLxL,IAAAC,cAACwL,IAAK,CAACC,KAAK,cACT3E,EAAO/G,IAAAC,cAAC4I,EAAI,CAACrD,MAAOA,EAAOsD,UAAWA,EAAWC,MAAOA,EAAOjC,YAAaA,IACzE9G,IAAAC,cAAC0L,IAAQ,CAACxL,GAAG,OAEnBH,IAAAC,cAACwL,IAAK,CAACC,KAAK,cACT3E,EAAO/G,IAAAC,cAAC4K,EAAQ,CAACrF,MAAOA,EAAOsF,UAAWA,EAAW/D,KAAMA,IACxD/G,IAAAC,cAAC0L,IAAQ,CAACxL,GAAG,OAEnBH,IAAAC,cAACwL,IAAK,CAACC,KAAK,UACT3E,EAAO/G,IAAAC,cAAC2L,EAAQ,CAACpG,MAAOA,EAAO8C,QAASA,EAASvB,KAAMA,IACpD/G,IAAAC,cAAC0L,IAAQ,CAACxL,GAAG,OAEnBH,IAAAC,cAACwL,IAAK,CAACC,KAAK,UACT3E,EAAO/G,IAAAC,cAAC4G,EAAK,CAACrB,MAAOA,EAAOsB,YAAaA,IACtC9G,IAAAC,cAAC0L,IAAQ,CAACxL,GAAG,OAEnBH,IAAAC,cAACwL,IAAK,CAACC,KAAK,KACT3E,EAAO/G,IAAAC,cAAC0L,IAAQ,CAACxL,GAAG,WAAcH,IAAAC,cAAC2H,EAAK,CAACU,QAASA,Q,2BC9C7D,MAAMuD,GAAUC,2BAAgB,CAC9BtG,MAAON,EACPwB,aAAc9B,EACdmC,KAAMY,IAOOoE,OAJDC,uBAAYH,GAASI,+BACjCC,2BAAgBC,QCPlBC,IAASC,OACPrM,IAAAC,cAACqM,IAAQ,CAACP,MAAOA,IACf/L,IAAAC,cAACsM,IAAM,KACLvM,IAAAC,cAACiL,GAAG,QAGRsB,SAASC,eAAe,W","file":"static/js/main.9d24c13b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Blog = ({ blog }) => {\r\n\r\n  return (\r\n    <tbody>\r\n      <tr>\r\n        <td>\r\n          <Link to={`/blogs/${blog.id}`}>{blog.title} by {blog.author}</Link>\r\n        </td>\r\n      </tr>\r\n    </tbody >\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  Togglable.propTypes = {\r\n    buttonLabel: PropTypes.string.isRequired\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p style={hideWhenVisible}>\r\n        <Button variant=\"primary\" onClick={toggleVisibility}>{props.buttonLabel}</Button>\r\n      </p>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <Button variant=\"danger\" onClick={toggleVisibility}>Cancel</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nexport default Togglable\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, FormGroup } from 'react-bootstrap'\r\n\r\nconst BlogForm = ({ createBlog }) => {\r\n  const [newTitle, setNewTitle] = useState('')\r\n  const [newAuthor, setNewAuthor] = useState('')\r\n  const [newUrl, setNewUrl] = useState('')\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault()\r\n    createBlog({\r\n      title: newTitle,\r\n      author: newAuthor,\r\n      url: newUrl\r\n    })\r\n    setNewTitle('')\r\n    setNewAuthor('')\r\n    setNewUrl('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Add a new blog</h2>\r\n      <Form onSubmit={addBlog}>\r\n        <FormGroup>\r\n          <Form.Label>Title</Form.Label>\r\n          <Form.Control\r\n            id='title'\r\n            type='text'\r\n            value={newTitle}\r\n            onChange={({ target }) => setNewTitle(target.value)} />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Form.Label>Author</Form.Label>\r\n          <Form.Control\r\n            id='author'\r\n            type='text'\r\n            value={newAuthor}\r\n            onChange={({ target }) => setNewAuthor(target.value)} />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Form.Label>URL</Form.Label>\r\n          <Form.Control\r\n            id='url'\r\n            type='text'\r\n            value={newUrl}\r\n            onChange={({ target }) => setNewUrl(target.value)} />\r\n        </FormGroup>\r\n        <Button variant=\"primary\" type=\"submit\" id='createButton'>Add blog</Button>\r\n        <p></p>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogForm","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newBlog => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  const response = await axios.post(baseUrl, newBlog, config)\r\n  return response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst comment = (id, comment) => {\r\n  const request = axios.post(`${baseUrl}/${id}/comments`, comment)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  return axios.delete(`${baseUrl}/${id}`, config)\r\n}\r\n\r\nexport default { getAll, setToken, create, update, remove, comment }","let timeoutID\r\n\r\nconst notificationReducer = (state = '', action) => {\r\n  switch (action.type) {\r\n  case 'SET_NOTIFICATION': {\r\n    const text = action.data.text\r\n    const cName = action.data.cName\r\n    return { text, cName }\r\n  }\r\n  case 'CLEAR_NOTIFICATION': {\r\n    return ''\r\n  }\r\n  default: {\r\n    return state\r\n  }\r\n  }\r\n}\r\n\r\nexport const setNotification = (text, cName) => {\r\n  clearTimeout(timeoutID)\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'SET_NOTIFICATION',\r\n      data: { text, cName }\r\n    })\r\n    timeoutID = setTimeout(() => {\r\n      dispatch({\r\n        type: 'CLEAR_NOTIFICATION'\r\n      })\r\n    }, 5000)\r\n\r\n  }\r\n}\r\n\r\nexport default notificationReducer","import blogService from '../services/blogs'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'INIT_BLOGS':\r\n    return action.data\r\n  case 'CREATE_NEW':\r\n    return [...state, action.data]\r\n  case 'UPDATE_BLOG': {\r\n    const changedBlog = action.data\r\n    return state.map(blog =>\r\n      blog.id !== changedBlog.id ? blog : changedBlog)\r\n  }\r\n  case 'DELETE_BLOG': {\r\n    const id = action.data\r\n    return state.filter(b => b.id !== id)\r\n  }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const addNewBlog = (content) => {\r\n  return async dispatch => {\r\n    try {\r\n      const newBlog = await blogService.create(content)\r\n      dispatch({\r\n        type: 'CREATE_NEW',\r\n        data: newBlog\r\n      })\r\n      dispatch(setNotification(`a new blog ${newBlog.title} by ${newBlog.author} added`, 'success'))\r\n    } catch (error) {\r\n      dispatch(setNotification('Failed to create new blog, please provide all information', 'danger'))\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const addNewComment = (comment, blog) => {\r\n  return async dispatch => {\r\n    try {\r\n      const commentedBlog = await blogService.comment(blog.id, comment)\r\n      dispatch({\r\n        type: 'UPDATE_BLOG',\r\n        data: commentedBlog\r\n      })\r\n      dispatch(setNotification('Thanks for commenting!', 'success'))\r\n    } catch (error) {\r\n      dispatch(setNotification('Unable to add comment', 'danger'))\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateBlog = (blog) => {\r\n  return async dispatch => {\r\n    try {\r\n      const likedBlog = { ...blog, likes: (blog.likes + 1) }\r\n      const updatedBlog = await blogService.update(blog.id, likedBlog)\r\n\r\n      dispatch({\r\n        type: 'UPDATE_BLOG',\r\n        data: updatedBlog\r\n      })\r\n      dispatch(setNotification('Thanks for liking!', 'success'))\r\n    } catch (error) {\r\n      dispatch(setNotification(`Blog '${blog.title}' was already removed from the server`, 'danger'))\r\n    }\r\n  }\r\n}\r\n\r\n// export const removeBlog = (blog) => {\r\n//   const id = blog.id\r\n//   return async dispatch => {\r\n//     try {\r\n//       await blogService.remove(id)\r\n//       dispatch({\r\n//         type: 'DELETE_BLOG',\r\n//         data: id\r\n//       })\r\n//       dispatch(setNotification(`Blog ${blog.title} by ${blog.author} removed!`, 'success'))\r\n//     } catch (error) {\r\n//       dispatch(setNotification(`Blog '${blog.title}' was already removed from the server`, 'danger'))\r\n//       dispatch(initializeBlogs())\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport const initializeBlogs = () => {\r\n  return async dispatch => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch({\r\n      type: 'INIT_BLOGS',\r\n      data: blogs\r\n    })\r\n  }\r\n}\r\n\r\nexport default blogReducer","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport Blog from './Blog'\r\nimport Togglable from './Togglable'\r\nimport BlogForm from './BlogForm'\r\nimport { addNewBlog } from '../reducers/blogReducer'\r\nimport { Table } from 'react-bootstrap'\r\n\r\nconst Blogs = ({ blogs }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const addBlog = async (newBlog) => {\r\n    blogFormRef.current.toggleVisibility()\r\n    dispatch(addNewBlog(newBlog))\r\n  }\r\n\r\n  const blogFormRef = React.createRef()\r\n\r\n  const blogForm = () => (\r\n    <Togglable buttonLabel='add new blog' ref={blogFormRef}>\r\n      <BlogForm createBlog={addBlog} />\r\n    </Togglable>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {blogForm()}\r\n      <h2>Blogs</h2>\r\n      <Table striped hover>\r\n        {blogs\r\n          .sort(({ likes: previousLikes }, { likes: currentLikes }) => currentLikes - previousLikes)\r\n          .map(blog =>\r\n            <Blog key={blog.id} blog={blog} />\r\n          )}\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blogs","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Notification = () => {\r\n  const notification = useSelector(state => state.notification)\r\n\r\n  if (notification === null) {\r\n    return null\r\n  } else {\r\n    return (\r\n      <Alert variant={notification.cName}>\r\n        {notification.text}\r\n      </Alert>\r\n    )\r\n  }\r\n}\r\nexport default Notification","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Table } from 'react-bootstrap'\r\n\r\nconst Users = ({ blogs, uniqueUsers }) => {\r\n\r\n  for (let user of uniqueUsers) {\r\n    const blogsByUser = blogs.filter(blog => blog.user.id === user.id)\r\n    user.blogs = blogsByUser\r\n  }\r\n  if (!(blogs || uniqueUsers)) {\r\n    return null\r\n  }\r\n\r\n  console.log(uniqueUsers)\r\n\r\n  return (\r\n    <div>\r\n      <Table striped hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Users</th>\r\n            <th>Blogs created</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {uniqueUsers\r\n            .map(user =>\r\n              <tr key={user.id}>\r\n                <th><Link to={`/users/${user.id}`}>{user.name}</Link></th>\r\n                <th>{user.blogs.length}</th>\r\n              </tr>)}\r\n        </tbody>\r\n      </Table>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Users","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import loginService from '../services/login'\r\nimport blogService from '../services/blogs'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\n\r\nconst loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\r\nlet user\r\nif (loggedUserJSON) {\r\n  user = JSON.parse(loggedUserJSON)\r\n  blogService.setToken(user.token)\r\n}\r\n\r\nconst userReducer = (state = user || null, action) => {\r\n  switch (action.type) {\r\n  case 'USER_LOGIN':\r\n    return action.data\r\n  case 'CLEAR_USER':\r\n    return null\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const login = (username, password) => {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await loginService.login(\r\n        {\r\n          username, password,\r\n        })\r\n      window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(user))\r\n      blogService.setToken(user.token)\r\n      dispatch({\r\n        type: 'USER_LOGIN',\r\n        data: user\r\n      })\r\n      dispatch(setNotification(`Welcome ${user.name}`, 'success'))\r\n    } catch (exception) {\r\n      dispatch(setNotification('Wrong username or password', 'danger'))\r\n    }\r\n  }\r\n}\r\n\r\nexport const logOut = () => {\r\n  window.localStorage.clear()\r\n  return ({\r\n    type: 'CLEAR_USER',\r\n  })\r\n}\r\n\r\nexport default userReducer","import React, { useState } from 'react'\r\nimport { login } from '../reducers/userReducer'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Form, FormGroup, Button, Row, Col } from 'react-bootstrap'\r\n\r\nconst Login = (props) => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogin = (event) => {\r\n    event.preventDefault()\r\n    setUsername('')\r\n    setPassword('')\r\n    dispatch(login(username, password))\r\n    props.history.push('/blogs')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Please login to Blog app</h2>\r\n      <p></p>\r\n      <Form onSubmit={handleLogin}>\r\n        <FormGroup as={Row}>\r\n          <Form.Label column sm={2}>Username</Form.Label>\r\n          <Col sm={5}>\r\n            <Form.Control\r\n              id=\"username\"\r\n              type=\"text\"\r\n              value={username}\r\n              name=\"Username\"\r\n              onChange={({ target }) => setUsername(target.value)} />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup as={Row}>\r\n          <Form.Label column sm={2}>Password</Form.Label>\r\n          <Col sm={5}>\r\n            <Form.Control\r\n              id=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              name=\"Password\"\r\n              onChange={({ target }) => setPassword(target.value)} />\r\n          </Col>\r\n        </FormGroup>\r\n        <Button variant='primary' type=\"submit\">Login</Button>\r\n      </Form>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport { ListGroup, ListGroupItem } from 'react-bootstrap'\r\n\r\nconst User = ({ userMatch, users, uniqueUsers, blogs }) => {\r\n\r\n  for (let user of uniqueUsers) {\r\n    const blogsByUser = blogs.filter(blog => blog.user.id === user.id)\r\n    user.blogs = blogsByUser\r\n  }\r\n  const user = userMatch\r\n    ? users.find(u => u.id === userMatch.params.id)\r\n    : null\r\n\r\n  if (!user) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{user.name}</h2>\r\n      <ListGroup>Added blogs\r\n        {user.blogs\r\n          .map(blog =>\r\n            <ListGroupItem key={blog.id} action href={`/blogs/${blog.id}`} variant='primary'>{blog.title}</ListGroupItem>\r\n          )}\r\n      </ListGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { logOut } from '../reducers/userReducer'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { Button, Nav, Navbar } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Navigation = ({ user, history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logOut())\r\n    dispatch(setNotification(`${user.name} has safely logged out`, 'success'))\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Navbar bg='light' variant='light'>\r\n          <Nav.Item>\r\n            <Nav.Link><Link to='/blogs'>Blogs</Link></Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link><Link to='/users'>Users</Link></Nav.Link>\r\n          </Nav.Item>\r\n          <Navbar.Collapse className='justify-content-end'>\r\n            <Navbar.Text>\r\n              {user.name} logged in &nbsp;\r\n              <Button variant=\"secondary\" size='sm' type=\"submit\" id='logOutButton' onClick={handleLogout}>log out</Button>\r\n            </Navbar.Text>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n      <h1>Blog app</h1>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Navigation","import React, { useState } from 'react'\r\nimport { Card, Button, Form, FormGroup, ListGroup, ListGroupItem } from 'react-bootstrap'\r\n\r\nconst Comment = ({ content }) => {\r\n  return (\r\n    <>\r\n      <ListGroupItem>{content}</ListGroupItem>\r\n    </>\r\n  )\r\n}\r\n\r\nconst BlogCard = ({ blog, like, addComment }) => {\r\n  const [newComment, setNewComment] = useState('')\r\n\r\n  const submitComment = (event) => {\r\n    event.preventDefault()\r\n    addComment(newComment)\r\n    setNewComment('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className='mb-2'>\r\n        <Card.Body>\r\n          <Card.Title>{blog.title}</Card.Title>\r\n          <Card.Text>Blog by {blog.author}</Card.Text>\r\n          <Card.Subtitle>{blog.likes} likes <Button variant='success' type=\"button\" size='sm'\r\n            onClick={() => like(blog)}>Like</Button></Card.Subtitle>\r\n          <Card.Link href={blog.url}>{blog.url}</Card.Link>\r\n          <Card.Text>Added by {blog.user.username}</Card.Text>\r\n\r\n          <strong>comments:</strong>\r\n          <ListGroup variant='flush'>\r\n            {blog.comments.map(comment =>\r\n              <Comment key={comment.id} content={comment.content} />\r\n            )}\r\n          </ListGroup>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      <Form onSubmit={submitComment}>\r\n        <FormGroup>\r\n          <Form.Label>Add your comment:</Form.Label>\r\n          <Form.Control\r\n            id='comment'\r\n            type='text'\r\n            value={newComment}\r\n            onChange={({ target }) => setNewComment(target.value)} />\r\n        </FormGroup>\r\n        <Button type='submit'>Send comment</Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogCard","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateBlog, addNewComment } from '../reducers/blogReducer'\r\nimport BlogCard from './BlogCard'\r\n\r\nconst BlogInfo = ({ blogs, blogMatch, user }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const blog = blogMatch\r\n    ? blogs.find(blog => blog.id === blogMatch.params.id)\r\n    : null\r\n\r\n  const like = (blog) => {\r\n    dispatch(updateBlog(blog))\r\n  }\r\n\r\n  const addComment = (comment) => {\r\n    dispatch(addNewComment({\r\n      content: comment\r\n    }, blog))\r\n  }\r\n\r\n  if (!blog) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <BlogCard blog={blog} like={like} addComment={addComment} user={user} />\r\n  )\r\n}\r\n\r\nexport default BlogInfo","import React, { useEffect } from 'react'\r\nimport BlogList from './components/BlogList'\r\nimport Notification from './components/Notification'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { initializeBlogs } from './reducers/blogReducer'\r\nimport { Switch, Route, useHistory, Redirect, useRouteMatch } from 'react-router-dom'\r\nimport Users from './components/Users'\r\nimport Login from './components/Login'\r\nimport User from './components/User'\r\nimport Navigation from './components/Navigation'\r\nimport BlogInfo from './components/BlogInfo'\r\nimport { uniqBy } from 'lodash'\r\nimport { Container } from 'react-bootstrap'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeBlogs())\r\n  }, [dispatch])\r\n\r\n  const user = useSelector(state => state.user)\r\n  const blogs = useSelector(state => state.blogs)\r\n  const users = blogs.map(blog => blog.user)\r\n  const uniqueUsers = uniqBy(users, 'id')\r\n\r\n  const history = useHistory()\r\n\r\n  const userMatch = useRouteMatch('/users/:id')\r\n  const blogMatch = useRouteMatch('/blogs/:id')\r\n\r\n  return (\r\n    <Container className=\"justify-content-md-center mt-2 mb-2\">\r\n      <Notification />\r\n      {user ? <Navigation user={user} history={history} /> : null}\r\n      <Switch>\r\n        <Route path='/users/:id'>\r\n          {user ? <User blogs={blogs} userMatch={userMatch} users={users} uniqueUsers={uniqueUsers} />\r\n            : <Redirect to='/' />}\r\n        </Route>\r\n        <Route path='/blogs/:id'>\r\n          {user ? <BlogInfo blogs={blogs} blogMatch={blogMatch} user={user} />\r\n            : <Redirect to='/' />}\r\n        </Route>\r\n        <Route path='/blogs'>\r\n          {user ? <BlogList blogs={blogs} history={history} user={user} />\r\n            : <Redirect to='/' />}\r\n        </Route>\r\n        <Route path='/users'>\r\n          {user ? <Users blogs={blogs} uniqueUsers={uniqueUsers} />\r\n            : <Redirect to='/' />}\r\n        </Route>\r\n        <Route path='/'>\r\n          {user ? <Redirect to='/blogs' /> : <Login history={history} />}\r\n        </Route>\r\n      </Switch>\r\n    </Container >\r\n  )\r\n}\r\n\r\nexport default App","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport blogReducer from './reducers/blogReducer'\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport userReducer from './reducers/userReducer'\r\n\r\nconst reducer = combineReducers({\r\n  blogs: blogReducer,\r\n  notification: notificationReducer,\r\n  user: userReducer\r\n})\r\n\r\nconst store = createStore(reducer, composeWithDevTools(\r\n  applyMiddleware(thunk))\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}